{"version":3,"sources":["components/Card.js","map.js","components/nav/Nav.js","App.js","index.js"],"names":["Card","props","className","onClick","closeCard","src","marker","url","position","lat","lng","WrappedMap","withScriptjs","withGoogleMap","useState","markers","setMarkers","useEffect","firebase","storage","ref","listAll","then","result","items","forEach","imageRef","getDownloadURL","parseFloat","split","toFixed","prevMarkers","catch","error","displayImage","clickedMarker","setClickedMarker","defaultZoom","defaultCenter","defaultOptions","disableDefaultUI","length","map","index","defaultPosition","Nav","role","id","type","href","children","App","style","width","height","googleMapURL","loadingElement","containerElement","mapElement","initializeApp","firestore","settings","ReactDOM","render","document","getElementById"],"mappings":"iSAsBeA,G,OAnBF,SAACC,GAEV,OACI,qCACI,qBAAKC,UAAU,WAAWC,QAASF,EAAMG,YAGzC,sBAAKF,UAAU,OAAf,UACI,qBAAKA,UAAU,MAAMG,IAAKJ,EAAMK,OAAOC,MACvC,sBAAKL,UAAU,WAAf,UACI,qCAAO,sBAAMA,UAAU,SAAhB,oBAAP,mCACA,yEACA,8BAAID,EAAMK,OAAOE,SAASC,IAA1B,KAAiCR,EAAMK,OAAOE,SAASE,kBC6C5DC,EAFIC,uBAAaC,yBAtDpB,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,KAGdC,qBAAU,WACWC,IAASC,UAAUC,IAAI,UAE7BC,UAAUC,MAAK,SAAUC,GAChCA,EAAOC,MAAMC,SAAQ,SAAUC,IAQvC,SAAsBA,GAClBA,EAASC,iBAAiBL,MAAK,SAAUf,GACrC,IAAIE,EAAMmB,WAAWA,WAAWrB,EAAIsB,MAAM,OAAO,GAAGA,MAAM,OAAO,IAAIC,QAAQ,IACzEpB,EAAMkB,WAAWA,WAAWrB,EAAIsB,MAAM,OAAO,GAAGA,MAAM,OAAO,GAAGA,MAAM,KAAK,IAAIC,QAAQ,IAC3Fd,GAAW,SAACe,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAwB,CAAEvB,SAAU,CAAEC,IAAKA,EAAKC,IAAKA,GAAOH,IAAKA,WAEtEyB,OAAM,SAAUC,OAdXC,CAAaR,SAElBM,OAAM,SAAUC,SAGpB,IAbW,MA0B4BnB,qBA1B5B,mBA0BPqB,EA1BO,KA0BQC,EA1BR,KAgCd,OACI,eAAC,YAAD,CACIC,YAAa,GACbC,cAAe,CAAE7B,IAAK,UAAWC,KAAM,WACvC6B,eAAgB,CAAEC,kBAAkB,GAHxC,UAIMzB,EAAQ0B,OAAS,EACf1B,EAAQ2B,KAAI,SAACpC,EAAQqC,GACjB,OACI,cAAC,SAAD,CAEIC,gBAAiBtC,EAAOE,SACxBL,QAAS,WAAQiC,EAAiB9B,KAF7BqC,MAMf,KAELR,EAAgB,cAAC,EAAD,CAAM7B,OAAQ6B,EAAe/B,UAtBpC,WACdgC,EAAiB,SAqB4D,YCvBtES,G,OA3BH,SAAC5C,GACT,OACI,mCACI,sBAAK6C,KAAK,aAAV,UACI,sBAAKC,GAAG,aAAR,UAEI,uBAAOC,KAAK,aAGZ,yBACA,yBACA,yBAEA,qBAAID,GAAG,OAAP,UACI,mBAAGE,KAAK,IAAR,SAAY,wCACZ,mBAAGA,KAAK,wCAAR,SAAgD,oDAChD,mBAAGA,KAAK,8BAAR,SAAsC,oDACtC,mBAAGA,KAAK,4BAAR,SAAoC,gDACpC,mBAAGA,KAAK,iCAAR,SAAyC,0DAGhDhD,EAAMiD,gB,OCFRC,MAhBf,WAGI,OACI,cAAC,EAAD,UACI,qBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAtC,SACI,cAAC,EAAD,CACIC,aAAc,gIACdC,eAAgB,qBAAKJ,MAAO,CAAEE,OAAQ,UACtCG,iBAAkB,qBAAKL,MAAO,CAAEE,OAAQ,UACxCI,WAAY,qBAAKN,MAAO,CAAEE,OAAQ,iB,wBCItDpC,IAASyC,cAVM,CACX,OAAU,0CACV,WAAc,2CACd,YAAe,kDACf,UAAa,2BACb,cAAiB,uCACjB,kBAAqB,cACrB,MAAS,2CACT,cAAiB,iBAMHzC,IAAS0C,YAEjBC,SADO,IAGjBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8f99b60.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Backdrop\" onClick={props.closeCard}>\r\n\r\n            </div>\r\n            <div className=\"Card\">\r\n                <img className=\"img\" src={props.marker.url}></img>\r\n                <div className=\"CardBody\">\r\n                    <p>Hey <span className=\"tomato\">♥</span>(ˆ⌣ˆԅ)...</p>\r\n                    <p>Would be Nice if someone picked up from:</p>\r\n                    <p>{props.marker.position.lat}, {props.marker.position.lng}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from 'react-google-maps'\r\nimport firebase from 'firebase';\r\nimport Card from './components/Card';\r\nconst Map = () => {\r\n    const [markers, setMarkers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var storageRef = firebase.storage().ref(\"images\");\r\n        // Now we get the references of these images\r\n        storageRef.listAll().then(function (result) {\r\n            result.items.forEach(function (imageRef) {\r\n                displayImage(imageRef);\r\n            });\r\n        }).catch(function (error) {\r\n            // Handle any errors\r\n        });\r\n    }, []);\r\n\r\n    function displayImage(imageRef) {\r\n        imageRef.getDownloadURL().then(function (url) {\r\n            let lat = parseFloat(parseFloat(url.split('%2F')[1].split('%2C')[0]).toFixed(6));\r\n            let lng = parseFloat(parseFloat(url.split('%2F')[1].split('%2C')[1].split('?')[0]).toFixed(6));\r\n            setMarkers((prevMarkers) => {\r\n                return [...prevMarkers, { position: { lat: lat, lng: lng }, url: url }];\r\n            });\r\n        }).catch(function (error) {\r\n            // Handle any errors\r\n        });\r\n    }\r\n    const [clickedMarker, setClickedMarker] = useState();\r\n    const closeCard = () => {\r\n        setClickedMarker(null);\r\n    }\r\n\r\n\r\n    return (\r\n        <GoogleMap\r\n            defaultZoom={14}\r\n            defaultCenter={{ lat: 40.425869, lng: -86.908066 }}\r\n            defaultOptions={{ disableDefaultUI: true }}>\r\n            { markers.length > 0 ?\r\n                markers.map((marker, index) => {\r\n                    return (\r\n                        <Marker\r\n                            key={index}\r\n                            defaultPosition={marker.position}\r\n                            onClick={() => { setClickedMarker(marker) }}\r\n                        ></Marker>\r\n                    );\r\n                })\r\n                : null\r\n            }\r\n            {clickedMarker ? <Card marker={clickedMarker} closeCard={closeCard} /> : null}\r\n        </GoogleMap >\r\n    );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nexport default WrappedMap;","import React, { Children } from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <>\r\n            <nav role=\"navigation\">\r\n                <div id=\"menuToggle\">\r\n\r\n                    <input type=\"checkbox\" />\r\n\r\n\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n\r\n                    <ul id=\"menu\">\r\n                        <a href=\"#\"><li>Home</li></a>\r\n                        <a href=\"https://github.com/IbrahimSaeedPurdue\"><li>Ibrahim's Github</li></a>\r\n                        <a href=\"https://github.com/gharrals\"><li>Grayson's Github</li></a>\r\n                        <a href=\"https://github.com/wh1fty\"><li>Dan's Github</li></a>\r\n                        <a href=\"https://github.com/kennethwong\"><li>Kenneth's Github</li></a>\r\n                    </ul>\r\n                </div>\r\n                {props.children}\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;","import './App.css';\nimport Map from './map';\nimport Nav from './components/nav/Nav';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n\n    return (\n        <Nav>\n            <div style={{ width: \"100vw\", height: \"100vh\" }}>\n                <Map\n                    googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDej4tfnSFsNHhxVn2IDsxJZ104B1zReSU\"}\n                    loadingElement={<div style={{ height: \"100%\" }}></div>}\n                    containerElement={<div style={{ height: \"100%\" }}></div>}\n                    mapElement={<div style={{ height: \"100%\" }}></div>} />\n            </div>\n        </Nav>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Import Firebase as well as any extensions. In this case we're just adding on Firestore (our database)\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n// Initialize Firebase\nconst config = {\n    \"apiKey\": \"AIzaSyCPQrcn6LKESGwYDvcv2TyL69DBGkYGPzM\",\n    \"authDomain\": \"ecomake-litter-detection.firebaseapp.com\",\n    \"databaseURL\": \"https://ecomake-litter-detection.firebaseio.com\",\n    \"projectId\": \"ecomake-litter-detection\",\n    \"storageBucket\": \"ecomake-litter-detection.appspot.com\",\n    \"messagingSenderId\": \"33879517927\",\n    \"appId\": \"1:33879517927:web:ead9dd0ac58eb1678f5042\",\n    \"measurementId\": \"G-2P7F8DTD3B\"\n};\nfirebase.initializeApp(config);\n\n// This prevents a warning message for changes to firestore timestamp syntax in the console\n// Firestore is still in Beta - in the future this won't be necessary\nconst firestore = firebase.firestore();\nconst settings = {};\nfirestore.settings(settings);\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}